create or replace PACKAGE PACKAGE_CUSTOMER_ORDERS
AS
    FUNCTION ROW_EXISTS(O_ID INT, P_ID INT) RETURN NUMBER;
    PROCEDURE ADD_PRODUCT_TO_ORDER(O_ID INT, P_ID INT, QTY INT);
    PROCEDURE CONFIRM_CUSTOMER_ORDER(O_ID INT);
END PACKAGE_CUSTOMER_ORDERS;

create or replace PACKAGE BODY PACKAGE_CUSTOMER_ORDERS
AS    
    FUNCTION ROW_EXISTS(O_ID INT, P_ID INT) RETURN NUMBER
    AS
    is_true NUMBER := 0;
    BEGIN
        SELECT COUNT(PRODUCT_ID)
        INTO is_true
        FROM CUSTOMER_ORDERS
        WHERE ORDER_ID = O_ID
            AND PRODUCT_ID = P_ID;

        RETURN NVL(is_true,0);
    END;

    PROCEDURE ADD_PRODUCT_TO_ORDER(O_ID INT, P_ID INT, QTY INT)
    IS
    BEGIN
    IF ROW_EXISTS(O_ID, P_ID) = 0 THEN
        INSERT INTO CUSTOMER_ORDERS(ID, ORDER_ID, PRODUCT_ID, QUANTITY)
        VALUES(CUSTOMER_ORDERS_SEQ.nextval, O_ID, P_ID, QTY);
    ELSE
        UPDATE CUSTOMER_ORDERS
        SET QUANTITY = QUANTITY + QTY
        WHERE ORDER_ID = O_ID
            AND PRODUCT_ID = P_ID;
    END IF;
    END;
    
    PROCEDURE CONFIRM_CUSTOMER_ORDER(O_ID INT)
    IS
    BEGIN
    UPDATE CUSTOMER_ORDERS
    SET CONFIRMED = 'Y'
    WHERE ORDER_ID = O_ID;
    
    UPDATE ORDERS
    SET ORDER_DATE = SYSDATE
    WHERE ORDER_ID = O_ID;
    END;
    
END;

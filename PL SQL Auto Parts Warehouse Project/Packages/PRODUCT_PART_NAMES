create or replace PACKAGE P_PRODUCT_PART_NAMES
AS
    PROCEDURE READ_CSV_PART_NAMES;
    PROCEDURE ADD_NEW_PRODUCT_PART_NAMES(S_ID INT, P_NUM INT, P_NAME VARCHAR2);
    FUNCTION CHECK_REPEATED_PART_NUMBER(P_NUM VARCHAR2) RETURN NUMBER;
    FUNCTION GET_UNIT_PRICE(P_NUM VARCHAR2) RETURN NUMBER;
END P_PRODUCT_PART_NAMES;

create or replace PACKAGE BODY P_PRODUCT_PART_NAMES
AS
    PROCEDURE READ_CSV_PART_NAMES
    IS
    CURSOR csv_cursor IS
        SELECT SUPPLIER_ID, PART_NUMBER, PRODUCT_NAME, UNIT_PRICE
        FROM IMPORT_NEW_PRODUCTS;

    s_id IMPORT_NEW_PRODUCTS.SUPPLIER_ID%TYPE;
    p_num IMPORT_NEW_PRODUCTS.PART_NUMBER%TYPE;
    pro_name IMPORT_NEW_PRODUCTS.PRODUCT_NAME%TYPE;
    price IMPORT_NEW_PRODUCTS.UNIT_PRICE%TYPE;

    is_true NUMBER;
    BEGIN
    open csv_cursor;
        LOOP
            FETCH csv_cursor
            INTO s_id, p_num, pro_name, price;
            EXIT WHEN csv_cursor%notfound;
            is_true := CHECK_REPEATED_PART_NUMBER(P_NUM);
            IF P_PRODUCT_PART_NAMES.CHECK_REPEATED_PART_NUMBER(P_NUM) = 0 THEN
                INSERT INTO PRODUCT_PART_NAMES(P_ID, SUPPLIER_ID, PART_NUMBER, PRODUCT_NAME, UNIT_PRICE)
                VALUES(P_NAMES.nextval, s_id, p_num, pro_name, price);
            END IF;
        END LOOP;
    close csv_cursor;     
    END;

    FUNCTION CHECK_REPEATED_PART_NUMBER(P_NUM VARCHAR2)
    RETURN NUMBER
    IS
    is_added NUMBER := 0;
    BEGIN
        SELECT COUNT(PART_NUMBER)
        INTO is_added
        FROM PRODUCT_PART_NAMES
        WHERE PART_NUMBER LIKE P_NUM;

        RETURN nvl(is_added,0);
    END;

    FUNCTION GET_UNIT_PRICE(P_NUM VARCHAR2)
    RETURN NUMBER
    IS
    price NUMBER := 0;
    BEGIN
        SELECT UNIT_PRICE
        INTO price
        FROM PRODUCT_PART_NAMES
        WHERE TRIM(PART_NUMBER) LIKE P_NUM;
        RETURN nvl(price,0);
    END;

    PROCEDURE ADD_NEW_PRODUCT_PART_NAMES(S_ID INT, P_NUM INT, P_NAME VARCHAR2)
    IS
    BEGIN
    INSERT INTO PRODUCT_PART_NAMES(P_ID, SUPPLIER_ID, PART_NUMBER, PRODUCT_NAME)
    VALUES(P_NAMES.nextval, S_ID, P_NUM, P_NAME);
    END;
END;

create or replace PACKAGE P_PURCHASE_ORDERS
AS
    PROCEDURE ADD_NEW_PO_ORDERS_FROM_GENERATOR;
    PROCEDURE ADD_NEW_PO_ORDERS(PO_NUM INT, P_NUM INT, QTY INT, U_PRICE NUMBER);

END P_PURCHASE_ORDERS;

create or replace PACKAGE BODY P_PURCHASE_ORDERS
AS
    PROCEDURE ADD_NEW_PO_ORDERS_FROM_GENERATOR
    IS
    CURSOR PO_CURSOR IS
        SELECT PO_NUMBER, PART_NUMBER, SUM(QUANTITY) AS QUANTITY
        FROM PO_GENERATOR
        GROUP BY PO_NUMBER, PART_NUMBER;

    PO_NUM PURCHASE_ORDERS.PO_NUMBER%TYPE;
    PART_NUM PURCHASE_ORDERS.PART_NUMBER%TYPE;
    QTY PURCHASE_ORDERS.QUANTITY%TYPE;
    U_PRICE PRODUCT_PART_NAMES.UNIT_PRICE%TYPE;
    BEGIN
    OPEN PO_CURSOR;
        LOOP
            FETCH PO_CURSOR INTO PO_NUM, PART_NUM, QTY;
            EXIT WHEN PO_CURSOR%notfound;
            U_PRICE := P_PRODUCT_PART_NAMES.GET_UNIT_PRICE(PART_NUM);
            INSERT INTO PURCHASE_ORDERS(PO_ID, PO_NUMBER, PART_NUMBER, QUANTITY, UNIT_PRICE)
            VALUES(PO_S.nextval, PO_NUM, PART_NUM, QTY, U_PRICE);
        END LOOP;
    CLOSE PO_CURSOR;
    END;

    PROCEDURE ADD_NEW_PO_ORDERS(PO_NUM INT, P_NUM INT, QTY INT, U_PRICE NUMBER)
    IS
    BEGIN
    INSERT INTO PURCHASE_ORDERS(PO_ID, PO_NUMBER, PART_NUMBER, QUANTITY, UNIT_PRICE)
    VALUES(PO_S.nextval, PO_NUM, P_NUM, QTY, U_PRICE);
    END;
END;

{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "81ab4bb7-8ff3-49c0-8783-e3683cfa205d",
   "metadata": {},
   "outputs": [],
   "source": [
    "import os\n",
    "%load_ext autoreload\n",
    "%autoreload 2\n",
    "import pandas as pd\n",
    "import pyspark\n",
    "import pyarrow\n",
    "\n",
    "from pyspark.sql import SparkSession\n",
    "from pyspark.sql.functions import *"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "a73cb19f-c5ec-440e-91b4-da11d92c2565",
   "metadata": {},
   "outputs": [],
   "source": [
    "os.environ['SPARK_HOME'] = 'C:/Users/saul2/Spark_DF/spark-3.5.5-bin-hadoop3'\n",
    "os.environ['HADOOP_HOME'] = 'C:/Users/saul2/Spark_DF/spark-3.5.5-bin-hadoop3'\n",
    "os.environ['JAVA_HOME'] = 'C:/Program Files/Java/jdk1.8.0_202'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "879f2598-b179-4413-b906-964b2a3e07d4",
   "metadata": {},
   "outputs": [],
   "source": [
    "#spark = SparkSession.builder.appName(\"Practice\").\\\n",
    "#    .config(\"spark.hadoop.fs.file.impl\", \"org.apache.hadoop.fs.LocalFileSystem\") \\\n",
    "#    .config(\"spark.hadoop.hadoop.native.io\", \"false\").getOrCreate()\n",
    "spark = SparkSession.builder.appName(\"Practice\").getOrCreate()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "4e3ee73f-911d-4ea3-8606-ee8e1c4358af",
   "metadata": {},
   "outputs": [],
   "source": [
    "csv_file = 'Students_Grading_Dataset.csv'\n",
    "df = spark.read.option(\"header\", True).csv(csv_file)\n",
    "df.createOrReplaceTempView(\"Students\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "314bfa30-71fe-49e3-90f6-9efaf243d019",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Rename columns\n",
    "df = df.withColumnRenamed('Attendance (%)', 'Attendance_Percentage') \\\n",
    "        .withColumnRenamed('Stress_Level (1-10)', 'Stress_Level')\n",
    "# Create table after clean upo\n",
    "df.createOrReplaceTempView(\"Students\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "eba66088-11b6-4f48-920b-439b38b61874",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "+--------------------------+---------+-------+\n",
      "|col_name                  |data_type|comment|\n",
      "+--------------------------+---------+-------+\n",
      "|Student_ID                |string   |NULL   |\n",
      "|First_Name                |string   |NULL   |\n",
      "|Last_Name                 |string   |NULL   |\n",
      "|Email                     |string   |NULL   |\n",
      "|Gender                    |string   |NULL   |\n",
      "|Age                       |string   |NULL   |\n",
      "|Department                |string   |NULL   |\n",
      "|Attendance_Percentage     |string   |NULL   |\n",
      "|Midterm_Score             |string   |NULL   |\n",
      "|Final_Score               |string   |NULL   |\n",
      "|Assignments_Avg           |string   |NULL   |\n",
      "|Quizzes_Avg               |string   |NULL   |\n",
      "|Participation_Score       |string   |NULL   |\n",
      "|Projects_Score            |string   |NULL   |\n",
      "|Total_Score               |string   |NULL   |\n",
      "|Grade                     |string   |NULL   |\n",
      "|Study_Hours_per_Week      |string   |NULL   |\n",
      "|Extracurricular_Activities|string   |NULL   |\n",
      "|Internet_Access_at_Home   |string   |NULL   |\n",
      "|Parent_Education_Level    |string   |NULL   |\n",
      "|Family_Income_Level       |string   |NULL   |\n",
      "|Stress_Level              |string   |NULL   |\n",
      "|Sleep_Hours_per_Night     |string   |NULL   |\n",
      "+--------------------------+---------+-------+\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Show Column Names\n",
    "query = 'DESC STUDENTS'\n",
    "result = spark.sql(query)\n",
    "result.show(30, truncate=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "6a85ad15-efa1-4a8e-8785-c15ad287213a",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Students Older than 21\n",
    "query = \"SELECT * FROM STUDENTS WHERE AGE > 21\"\n",
    "result = spark.sql(query)\n",
    "#result.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "20753c28-02c9-4e6c-9681-2fc58f93f992",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Make a directory for my files\n",
    "output_dir = 'results'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "0fa5f5b0-17b1-4869-ac12-4ca1880e786a",
   "metadata": {},
   "outputs": [],
   "source": [
    "if not os.path.exists(output_dir):\n",
    "    os.makedirs(output_dir)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "434ff6e5-2504-4ae2-8b4f-b31d7b434680",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Students with a total_score higher than their department_avg\n",
    "query = '''\n",
    "    WITH DEPT_AVG AS (\n",
    "        SELECT DEPARTMENT, ROUND(AVG(TOTAL_SCORE),2) AVG_SCORE\n",
    "        FROM STUDENTS \n",
    "        GROUP BY DEPARTMENT\n",
    "    )\n",
    "    SELECT STUDENTS.DEPARTMENT, STUDENT_ID, FIRST_NAME, LAST_NAME, TOTAL_SCORE, DEPT_AVG.AVG_SCORE\n",
    "    FROM STUDENTS, DEPT_AVG\n",
    "    WHERE STUDENTS.DEPARTMENT = DEPT_AVG.DEPARTMENT\n",
    "        AND STUDENTS.TOTAL_SCORE > DEPT_AVG.AVG_SCORE\n",
    "    ORDER BY STUDENTS.DEPARTMENT, STUDENT_ID\n",
    "    '''\n",
    "result = spark.sql(query)\n",
    "#result.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "d65b5318-141d-4ccb-a756-e1284fc9dbc4",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Find the top 5 students with the highest final exam scores.\n",
    "query = '''\n",
    "        WITH TOP_5 AS (\n",
    "            SELECT STUDENT_ID, FIRST_NAME, LAST_NAME, FINAL_SCORE, RANK()OVER(ORDER BY FINAL_SCORE DESC) RANK\n",
    "            FROM STUDENTS\n",
    "            ORDER BY FINAL_SCORE DESC\n",
    "        )\n",
    "        SELECT STUDENT_ID, FIRST_NAME, LAST_NAME, FINAL_SCORE\n",
    "        FROM TOP_5\n",
    "        WHERE RANK <= 5\n",
    "    '''\n",
    "result = spark.sql(query)\n",
    "#result.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "75e778f6-213b-484e-b6e4-e3c686776791",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Students that participated in Extracurricular Activies\n",
    "query = '''\n",
    "        SELECT *\n",
    "        FROM STUDENTS\n",
    "        WHERE Extracurricular_Activities = 'Yes'\n",
    "    '''\n",
    "result = spark.sql(query)\n",
    "#result.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "d64430e4-792d-4a49-9408-b24dcd35c212",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Count how many students are in each department.\n",
    "query = '''\n",
    "        SELECT DEPARTMENT, COUNT(STUDENT_ID)\n",
    "        FROM STUDENTS\n",
    "        GROUP BY DEPARTMENT\n",
    "    '''\n",
    "result = spark.sql(query)\n",
    "#result.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "9221d2a1-6732-490c-beeb-d29fa1f57231",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Show the average age of students in each department\n",
    "query = '''\n",
    "        SELECT DEPARTMENT, ROUND(AVG(AGE),2) AVG_AGE\n",
    "        FROM STUDENTS\n",
    "        GROUP BY DEPARTMENT\n",
    "    '''\n",
    "result = spark.sql(query)\n",
    "#result.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "633446d9-dc8f-4ccc-852b-1c2ead0b3849",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Show males and females that scored a 70 or higher in midterm\n",
    "query = '''\n",
    "        SELECT GENDER, COUNT(STUDENT_ID)\n",
    "        FROM STUDENTS\n",
    "        WHERE MIDTERM_SCORE >= 70\n",
    "        GROUP BY GENDER\n",
    "    '''\n",
    "result = spark.sql(query)\n",
    "#result.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "3084b88c-e1af-4a18-804c-4462e0f76626",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Show students who get less than 6 hours of sleep per night.\n",
    "query = '''\n",
    "        SELECT STUDENT_ID, FIRST_NAME, LAST_NAME\n",
    "        FROM STUDENTS\n",
    "        WHERE SLEEP_HOURS_PER_NIGHT <= 6\n",
    "    '''\n",
    "result = spark.sql(query)\n",
    "#result.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "30589f64-1167-4a40-9d1d-fd782b375b32",
   "metadata": {},
   "outputs": [],
   "source": [
    "# List the first names and last names of all students with a grade of \"F\".\n",
    "query = '''\n",
    "        SELECT STUDENT_ID, FIRST_NAME, LAST_NAME\n",
    "        FROM STUDENTS\n",
    "        WHERE GRADE = 'F'\n",
    "        ORDER BY FIRST_NAME, LAST_NAME\n",
    "    '''\n",
    "result = spark.sql(query)\n",
    "#result.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 173,
   "id": "b82198d8-9eb9-4243-8dae-54d6b05272c9",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Find students with more than 90% attendance.\n",
    "query = '''\n",
    "        SELECT STUDENT_ID, FIRST_NAME, LAST_NAME, GRADE, ATTENDANCE_PERCENTAGE\n",
    "        FROM STUDENTS\n",
    "        WHERE ATTENDANCE_PERCENTAGE >= 90\n",
    "        ORDER BY FIRST_NAME, LAST_NAME\n",
    "    '''\n",
    "result = spark.sql(query)\n",
    "#result.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 181,
   "id": "bc3c17eb-cf53-44ea-b9cb-62df483fb01f",
   "metadata": {},
   "outputs": [],
   "source": [
    "# List all students who have internet access at home.\n",
    "query = '''\n",
    "        SELECT STUDENT_ID, FIRST_NAME, LAST_NAME, GRADE\n",
    "        FROM STUDENTS\n",
    "        WHERE INTERNET_ACCESS_AT_HOME = 'Yes'\n",
    "    '''\n",
    "result = spark.sql(query)\n",
    "#result.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 189,
   "id": "df805e97-f822-4dff-bca8-b57d1c57089c",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Calculate the average total score for each department.\n",
    "query = '''\n",
    "        SELECT DEPARTMENT, ROUND(AVG(MIDTERM_SCORE),2) AVG_MIDTERM, ROUND(AVG(FINAL_SCORE),2) AVG_FINAL\n",
    "        FROM STUDENTS\n",
    "        GROUP BY DEPARTMENT\n",
    "    '''\n",
    "result = spark.sql(query)\n",
    "#result.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 199,
   "id": "2a827a63-09d9-4f76-b543-eca4958e9722",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Find the average study hours per week by grade.\n",
    "query = '''\n",
    "        SELECT GRADE, ROUND(AVG(STUDY_HOURS_PER_WEEK),2) AVG_STUDY\n",
    "        FROM STUDENTS\n",
    "        GROUP BY GRADE\n",
    "        ORDER BY GRADE\n",
    "    '''\n",
    "result = spark.sql(query)\n",
    "#result.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 205,
   "id": "44ca4d18-ab18-402e-8564-f3907ea549f0",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Which gender has a higher average participation score?\n",
    "query = '''\n",
    "        SELECT GENDER, ROUND(AVG(PARTICIPATION_SCORE),2) AVG_PARTICIPATION\n",
    "        FROM STUDENTS\n",
    "        GROUP BY GENDER\n",
    "        ORDER BY AVG_PARTICIPATION DESC\n",
    "    '''\n",
    "result = spark.sql(query)\n",
    "#result.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 249,
   "id": "176654e7-d774-4593-9b86-d08cfd5875fe",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "+-------------------+----------+\n",
      "|FAMILY_INCOME_LEVEL|AVG_STRESS|\n",
      "+-------------------+----------+\n",
      "|               High|      5.46|\n",
      "|                Low|       5.5|\n",
      "|             Medium|      5.56|\n",
      "+-------------------+----------+\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# What is the average stress level for students with a \"High\" family income level?\n",
    "query = '''\n",
    "        SELECT FAMILY_INCOME_LEVEL, ROUND(AVG(STRESS_LEVEL),2) AVG_STRESS\n",
    "        FROM STUDENTS\n",
    "        GROUP BY FAMILY_INCOME_LEVEL\n",
    "    '''\n",
    "result = spark.sql(query)\n",
    "#result.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 223,
   "id": "50fa2e8a-ff54-4d0e-b49f-bddac9458a3c",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Show the total number of students in each parent education level.\n",
    "query = '''\n",
    "        SELECT PARENT_EDUCATION_LEVEL, COUNT(STUDENT_ID) STUDENT_COUNT\n",
    "        FROM STUDENTS\n",
    "        GROUP BY PARENT_EDUCATION_LEVEL\n",
    "        ORDER BY STUDENT_COUNT DESC\n",
    "    '''\n",
    "result = spark.sql(query)\n",
    "#result.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 239,
   "id": "cfdace85-c5da-478b-8533-d6fe19b574c0",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Find the department with the highest average project score.\n",
    "query = '''\n",
    "        SELECT DEPARTMENT, ROUND(AVG(PROJECTS_SCORE),2) AVG_PROJECTS_SCORE\n",
    "        FROM STUDENTS\n",
    "        GROUP BY DEPARTMENT\n",
    "    '''\n",
    "result = spark.sql(query)\n",
    "#result.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 251,
   "id": "28394efe-d031-4743-bb9d-4a28b79f7f8f",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Compare average sleep hours between students who participate in extracurriculars and those who don't.\n",
    "query = '''\n",
    "        SELECT ROUND(AVG(SLEEP_HOURS_PER_NIGHT),2) AVG_SLEEP, Extracurricular_Activities\n",
    "        FROM STUDENTS\n",
    "        GROUP BY Extracurricular_Activities\n",
    "    '''\n",
    "result = spark.sql(query)\n",
    "#result.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 261,
   "id": "9f9adda8-720a-4907-94d8-081982f2a2f3",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Find how many students have both low income and a high stress level (above 7).\n",
    "query = '''\n",
    "        SELECT COUNT(STUDENT_ID) STUDENT_COUNT\n",
    "        FROM STUDENTS\n",
    "        WHERE FAMILY_INCOME_LEVEL = 'Low' AND STRESS_LEVEL > 7\n",
    "    '''\n",
    "result = spark.sql(query)\n",
    "#result.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 289,
   "id": "769be061-7e3b-4094-aa0f-428557a3e8dd",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Show the top 3 most common grades.\n",
    "query = '''\n",
    "        WITH GRADE_COUNT AS (\n",
    "            SELECT GRADE, COUNT(STUDENT_ID) STUDENT_COUNT\n",
    "            FROM STUDENTS\n",
    "            GROUP BY GRADE\n",
    "        ), TOP_3 AS (\n",
    "            SELECT GRADE, STUDENT_COUNT, RANK()OVER(ORDER BY STUDENT_COUNT DESC) RANK\n",
    "            FROM GRADE_COUNT\n",
    "        )\n",
    "        SELECT *\n",
    "        FROM TOP_3 \n",
    "        WHERE RANK <= 3\n",
    "    '''\n",
    "result = spark.sql(query)\n",
    "#result.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 299,
   "id": "22f36f40-77d3-4cda-9b5c-1fd9e3db0913",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "+----------+----------+---------+-----------+----+\n",
      "|STUDENT_ID|FIRST_NAME|LAST_NAME|TOTAL_SCORE|RANK|\n",
      "+----------+----------+---------+-----------+----+\n",
      "|     S5640|      Liam|  Johnson|      99.99|   1|\n",
      "|     S5319|      John|    Davis|      99.98|   2|\n",
      "|     S1731|       Ali|    Smith|       99.9|   3|\n",
      "|     S3987|      John| Williams|       99.9|   3|\n",
      "|     S3158|      Sara|    Smith|      99.85|   5|\n",
      "+----------+----------+---------+-----------+----+\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Who are the top 5 students in terms of total score but sleep less than 6 hours per night?\n",
    "query = '''\n",
    "        WITH TOP_5 AS (\n",
    "            SELECT STUDENT_ID, FIRST_NAME, LAST_NAME, TOTAL_SCORE, RANK()OVER(ORDER BY TOTAL_SCORE DESC) RANK\n",
    "            FROM STUDENTS\n",
    "            WHERE SLEEP_HOURS_PER_NIGHT <= 6\n",
    "        )\n",
    "        SELECT *\n",
    "        FROM TOP_5\n",
    "        WHERE RANK <= 5\n",
    "    '''\n",
    "result = spark.sql(query)\n",
    "result.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 301,
   "id": "3223f78a-20a9-4caf-b8df-82f87aa8c782",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Conver my result to a Pandas Dataframe. PySpark is not working well to conver it into a parquet/csv file.\n",
    "pandas_df = result.toPandas()\n",
    "#path = os.path.join(output_dir, 'student_results.parquet')\n",
    "#pandas_df.to_parquet(path, engine='pyarrow') \n",
    "path = os.path.join(output_dir, 'Top_Five_Total_Score.csv')\n",
    "pandas_df.to_csv(path, index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a709bba5-446c-4798-8297-7af439799d87",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.13 (with Kaggle)",
   "language": "python",
   "name": "py313"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.13.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
